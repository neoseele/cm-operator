/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "k8s.io/cm-operator/pkg/apis/cmoperator/v1alpha1"
)

// CustomMetricLister helps list CustomMetrics.
// All objects returned here must be treated as read-only.
type CustomMetricLister interface {
	// List lists all CustomMetrics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomMetric, err error)
	// CustomMetrics returns an object that can list and get CustomMetrics.
	CustomMetrics(namespace string) CustomMetricNamespaceLister
	CustomMetricListerExpansion
}

// customMetricLister implements the CustomMetricLister interface.
type customMetricLister struct {
	indexer cache.Indexer
}

// NewCustomMetricLister returns a new CustomMetricLister.
func NewCustomMetricLister(indexer cache.Indexer) CustomMetricLister {
	return &customMetricLister{indexer: indexer}
}

// List lists all CustomMetrics in the indexer.
func (s *customMetricLister) List(selector labels.Selector) (ret []*v1alpha1.CustomMetric, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomMetric))
	})
	return ret, err
}

// CustomMetrics returns an object that can list and get CustomMetrics.
func (s *customMetricLister) CustomMetrics(namespace string) CustomMetricNamespaceLister {
	return customMetricNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomMetricNamespaceLister helps list and get CustomMetrics.
// All objects returned here must be treated as read-only.
type CustomMetricNamespaceLister interface {
	// List lists all CustomMetrics in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomMetric, err error)
	// Get retrieves the CustomMetric from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CustomMetric, error)
	CustomMetricNamespaceListerExpansion
}

// customMetricNamespaceLister implements the CustomMetricNamespaceLister
// interface.
type customMetricNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomMetrics in the indexer for a given namespace.
func (s customMetricNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomMetric, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomMetric))
	})
	return ret, err
}

// Get retrieves the CustomMetric from the indexer for a given namespace and name.
func (s customMetricNamespaceLister) Get(name string) (*v1alpha1.CustomMetric, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("custommetric"), name)
	}
	return obj.(*v1alpha1.CustomMetric), nil
}
